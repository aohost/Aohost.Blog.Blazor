@page "/posts/"
@*@page "/posts/page/{page:int}"*@
@page "/posts/{page:int}"

@if(posts == null)
{
    <Loading></Loading>
}
else
{
    <div class="post-warp archive">
        @if (posts.Success && posts.Result.Item.Any())
        {
            @foreach(var item in posts.Result.Item)
            {
                <h3>@item.Year</h3>
                foreach(var post in item.Posts)
                {
                    <article class="archive-item">
                        <NavLink href="@("/post" +  post.Url)">@post.Title</NavLink>
                        <span class="archive-item-date">@post.CreationTime</span>
                    </article>
                }
                <nav class="pagination">
                    @for(int i = 1; i < TotalPage; i++)
                    {
                        var _page = i;

                        if (page == _page)
                        {
                            <span class="page-number current">@_page</span>
                        }
                        else
                        {
                            <a class="page-number" @onclick="@(()=>RenderPage(_page))" href="/posts/@_page">@_page</a>
                        }
                    }
                </nav>
            }
        }
        else
        {
            <ErrorTip></ErrorTip>
        }

    </div>
}


@code{
    /// <summary>
    /// 当前页码
    /// </summary>
    public int? page { get; set; }

    /// <summary>
    /// 限制条数
    /// </summary>
    private int Limit = 15;

    /// <summary>
    /// 总页数
    /// </summary>
    private int TotalPage;

    /// <summary>
    /// 文章列表数据
    /// </summary>
    private ServiceResult<PagedList<QueryPostDto>> posts;

    /// <summary>
    /// 初始化
    /// </summary>
    /// <returns></returns>
    protected override async Task OnInitializedAsync()
    {
        page = page.HasValue ? page : 1;

        await RenderPage(page);
    }

    /// <summary>
    /// 获取数据
    /// </summary>
    /// <param name="page"></param>
    /// <returns></returns>
    private async Task RenderPage(int? page)
    {
        // 请求数据
        posts = await Http.GetFromJsonAsync<ServiceResult<PagedList<QueryPostDto>>>($"/blog/posts?page={page}&limit={Limit}");

        // 计算总页码
        TotalPage = (int)Math.Ceiling((posts.Result.Total / (double) Limit));
    }

    /// <summary>
    /// 初始化完成后执行，有值的时候是点击翻页过来的，没有值的时候是从首页点击进来的
    /// </summary>
    /// <returns></returns>
    protected override async Task OnParametersSetAsync()
    {
        if (!page.HasValue)
        {
            page = 1;
            await RenderPage(page);
        }
    }
}